version: '3.8'

services:
  music-aggregator-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: music-aggregator-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SERVER_PASSWORD=${SERVER_PASSWORD:-music-aggregator-2025}
      - CACHE_TTL=3600
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
    volumes:
      - ./backend/data:/app/data
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - music-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: music-aggregator-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - music-aggregator-backend
    networks:
      - music-network
    profiles:
      - production

networks:
  music-network:
    driver: bridge

volumes:
  music-data: